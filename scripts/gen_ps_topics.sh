#!/bin/bash

# called as ./scripts/gen_ps_topics.sh <CMAKE_SOURCE_DIR> <HEADER_CALLEES>

SOURCE_DIR="${1}"
HEADER_CALLEES="${2}"

if [ "x${HEADER_CALLEES}" == "x" ] || [ "x${SOURCE_DIR}" == "x" ];
then
    exit 0
fi

if [ -f "${HEADER_CALLEES}" ]; then
    exit 0
fi

cat <<EOF >"${HEADER_CALLEES}"
/*
 * Auto generated by ${0}
 */
#ifndef LOTTO_PS_INTERFACE_CALLEE_AUTOGEN_H
#define LOTTO_PS_INTERFACE_CALLEE_AUTOGEN_H

#define LOTTO_PS_INTERFACE_GENERATED 1
EOF

files_c="$(find "${SOURCE_DIR}/src" "${SOURCE_DIR}/plugins" -iname '*.c' )"

# topics[0]=""
# topic_callees[0]=""

while IFS= read -r filename; do
    basename=$(basename "${filename}" .c | tr '-' '_' | tr '.' '_' | tr ' ' '_')
    rel_path=$(realpath -s --relative-to="${SOURCE_DIR}" ${filename})
    dirname=$(dirname "${rel_path}" | tr '/' '_' | tr '.' '_' | tr '-' '_' | tr ' ' '_')
    local_callee="${dirname}_${basename}"
    # local_callee=$(grep "LOCAL_CALLEE" "${filename}" | grep '#define' | grep -v '//' | grep -v ' \* ' | grep -v '/\*' | grep -v '\*/' | grep -v '##')
    # if [[ $(echo "${local_callee}" | wc -l) -ne 1 ]]; then
    #     # no definition of LOCAL_CALLEE, so it cannot use generated headers for pubsub interface
    #     continue
    # fi
    # local_callee=$(echo "${local_callee}" | cut -d ' ' -f 3 | tr -d ' ' | tr -d '\n')

    local_subscriptions=$(grep PS_SUBSCRIBE_INTERFACE "${filename}" | \
        grep -v '#define' | \
        grep -v '//' | \
        grep -v ' \* ' | \
        grep -v '/\*' | \
        grep -v '\*/' | \
        grep -v '##' | \
        sed 's/^.*PS_SUBSCRIBE_INTERFACE//' | \
        tr -d '(' | \
        tr -d '{' | \
        tr -d ' ' | \
        sed 's/[ ]*,[ ]*$//')
    
    while IFS= read -r subscription; do
        local_topic=$(echo "$subscription" | cut -d ',' -f 1 | tr -d ' ')
        if [ "x${local_topic}" != "x" ]; then
            # echo "    local topic: ${local_topic}"
            topic_found=0
            for i in ${!topics[@]}; do
                cur_topic=${topics[$i]}
                if [ "x${cur_topic}" == "x${local_topic}" ]; then
                    topic_found=1
                    if [ "x${topic_callees[$i]}" == "x" ]; then
                        topic_callees[$i]="${local_callee}"
                    else
                        topic_callees[$i]="${topic_callees[$i]},${local_callee}"
                    fi
                fi
            done
            if [[ ${topic_found} -eq 0 ]]; then
                #new topic
                idx=${#topics[@]}
                # echo "New topic idx (sub): ${idx} ${local_topic}"
                topics[${idx}]="${local_topic}"
                topic_callees[${idx}]=${local_callee}
            fi
        fi
    done <<< "$local_subscriptions"

    local_contracts=$(grep CONTRACT_SUBSCRIBE "${filename}" | \
        grep -v '#define' | \
        grep -v '//' | \
        grep -v ' \* ' | \
        grep -v '/\*' | \
        grep -v '\*/' | \
        grep -v '##' | \
        sed 's/^.*CONTRACT_SUBSCRIBE//' | \
        tr -d '(' | \
        tr -d '{' | \
        tr -d ' ' | \
        sed 's/[ ]*,[ ]*$//')
    
    while IFS= read -r contract; do
        local_topic=$(echo "$contract" | cut -d ',' -f 1 | tr -d ' ')
        if [ "x${local_topic}" != "x" ]; then
            # echo "    local topic: ${local_topic}"
            topic_found=0
            for i in ${!topics[@]}; do
                cur_topic=${topics[$i]}
                if [ "x${cur_topic}" == "x${local_topic}" ]; then
                    topic_found=1
                    if [ "x${topic_callees[$i]}" == "x" ]; then
                        topic_callees[$i]="${local_callee}"
                    else
                        topic_callees[$i]="${topic_callees[$i]},${local_callee}"
                    fi
                fi
            done
            if [[ ${topic_found} -eq 0 ]]; then
                #new topic
                idx=${#topics[@]}
                # echo "New topic idx (sub): ${idx} ${local_topic}"
                topics[${idx}]="${local_topic}"
                topic_callees[${idx}]=${local_callee}
            fi
        fi
    done <<< "$local_contracts"

    local_publication=$(grep PUBLISH_INTERFACE "${filename}" | \
        grep -v '#define' | \
        grep -v '//' | \
        grep -v ' \* ' | \
        grep -v '/\*' | \
        grep -v '\*/' | \
        grep -v '##' | \
        sed 's/^.*PS_PUBLISH_INTERFACE//' | \
        tr -d '(' | \
        tr -d '{' | \
        tr -d ' ' | \
        sed 's/[ ]*,[ ]*$//' | \
        cut -d ',' -f 1)

    while IFS= read -r publication; do
        local_topic=$(echo "$publication" | cut -d ',' -f 1 | tr -d ' ')

        if [ "x${local_topic}" != "x" ]; then
            topic_found=0
            for i in ${!topics[@]}; do
                cur_topic=${topics[$i]}
                if [ "x${cur_topic}" == "x${local_topic}" ]; then
                    topic_found=1
                fi
            done
            if [[ ${topic_found} -eq 0 ]]; then
                #new topic
                idx=${#topics[@]}
                # echo "New topic idx (pub): ${idx} ${local_topic}"
                topics[${idx}]="${local_topic}"
                # topic_callees[${idx}]=${local_callee}
            fi
        fi
    done <<< "$local_publication"
done <<< "$files_c"

# echo "Found topics: ${topics[@]}"
# echo "Found topic_callees: ${topic_callees[@]}"

# done with all files, loop over collected topics and callees and generate header file content
for i in ${!topics[@]}; do
    topic=${topics[$i]}
    if [ "x${topic_callees[$i]}" != "x" ]; then
        echo "#define CALLEES_${topic} ${topic_callees[$i]}" >> "${HEADER_CALLEES}"
    fi
done

echo "${topics[@]}" | tr ' ' ';' | tr -d '\n' | sed 's/^;//'

cat <<EOF >>"${HEADER_CALLEES}"
#endif
EOF
